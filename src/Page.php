<?php
/**
 * Page automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */

namespace SdkFabric\Notion;

use PSX\Schema\Attribute\Description;
use PSX\Schema\Attribute\Key;

#[Description('')]
class Page implements \JsonSerializable, \PSX\Record\RecordableInterface
{
    #[Description('')]
    protected ?string $object = null;
    #[Description('')]
    protected ?string $id = null;
    #[Key('created_time')]
    #[Description('')]
    protected ?\PSX\DateTime\LocalDateTime $createdTime = null;
    #[Key('last_edited_time')]
    #[Description('')]
    protected ?\PSX\DateTime\LocalDateTime $lastEditedTime = null;
    #[Key('created_by')]
    #[Description('')]
    protected ?User $createdBy = null;
    #[Key('last_edited_by')]
    #[Description('')]
    protected ?User $lastEditedBy = null;
    #[Description('')]
    protected ?FileObject $cover = null;
    #[Description('')]
    protected ?Icon $icon = null;
    #[Key('in_trash')]
    #[Description('')]
    protected ?bool $inTrash = null;
    /**
     * @var \PSX\Record\Record<mixed>|null
     */
    #[Description('')]
    protected ?\PSX\Record\Record $properties = null;
    #[Description('')]
    protected ?ParentId $parent = null;
    #[Description('')]
    protected ?string $url = null;
    #[Key('public_url')]
    #[Description('')]
    protected ?string $publicUrl = null;
    public function setObject(?string $object): void
    {
        $this->object = $object;
    }
    public function getObject(): ?string
    {
        return $this->object;
    }
    public function setId(?string $id): void
    {
        $this->id = $id;
    }
    public function getId(): ?string
    {
        return $this->id;
    }
    public function setCreatedTime(?\PSX\DateTime\LocalDateTime $createdTime): void
    {
        $this->createdTime = $createdTime;
    }
    public function getCreatedTime(): ?\PSX\DateTime\LocalDateTime
    {
        return $this->createdTime;
    }
    public function setLastEditedTime(?\PSX\DateTime\LocalDateTime $lastEditedTime): void
    {
        $this->lastEditedTime = $lastEditedTime;
    }
    public function getLastEditedTime(): ?\PSX\DateTime\LocalDateTime
    {
        return $this->lastEditedTime;
    }
    public function setCreatedBy(?User $createdBy): void
    {
        $this->createdBy = $createdBy;
    }
    public function getCreatedBy(): ?User
    {
        return $this->createdBy;
    }
    public function setLastEditedBy(?User $lastEditedBy): void
    {
        $this->lastEditedBy = $lastEditedBy;
    }
    public function getLastEditedBy(): ?User
    {
        return $this->lastEditedBy;
    }
    public function setCover(?FileObject $cover): void
    {
        $this->cover = $cover;
    }
    public function getCover(): ?FileObject
    {
        return $this->cover;
    }
    public function setIcon(?Icon $icon): void
    {
        $this->icon = $icon;
    }
    public function getIcon(): ?Icon
    {
        return $this->icon;
    }
    public function setInTrash(?bool $inTrash): void
    {
        $this->inTrash = $inTrash;
    }
    public function getInTrash(): ?bool
    {
        return $this->inTrash;
    }
    /**
     * @param \PSX\Record\Record<mixed>|null $properties
     */
    public function setProperties(?\PSX\Record\Record $properties): void
    {
        $this->properties = $properties;
    }
    /**
     * @return \PSX\Record\Record<mixed>|null
     */
    public function getProperties(): ?\PSX\Record\Record
    {
        return $this->properties;
    }
    public function setParent(?ParentId $parent): void
    {
        $this->parent = $parent;
    }
    public function getParent(): ?ParentId
    {
        return $this->parent;
    }
    public function setUrl(?string $url): void
    {
        $this->url = $url;
    }
    public function getUrl(): ?string
    {
        return $this->url;
    }
    public function setPublicUrl(?string $publicUrl): void
    {
        $this->publicUrl = $publicUrl;
    }
    public function getPublicUrl(): ?string
    {
        return $this->publicUrl;
    }
    public function toRecord(): \PSX\Record\RecordInterface
    {
        /** @var \PSX\Record\Record<mixed> $record */
        $record = new \PSX\Record\Record();
        $record->put('object', $this->object);
        $record->put('id', $this->id);
        $record->put('created_time', $this->createdTime);
        $record->put('last_edited_time', $this->lastEditedTime);
        $record->put('created_by', $this->createdBy);
        $record->put('last_edited_by', $this->lastEditedBy);
        $record->put('cover', $this->cover);
        $record->put('icon', $this->icon);
        $record->put('in_trash', $this->inTrash);
        $record->put('properties', $this->properties);
        $record->put('parent', $this->parent);
        $record->put('url', $this->url);
        $record->put('public_url', $this->publicUrl);
        return $record;
    }
    public function jsonSerialize(): object
    {
        return (object) $this->toRecord()->getAll();
    }
}
